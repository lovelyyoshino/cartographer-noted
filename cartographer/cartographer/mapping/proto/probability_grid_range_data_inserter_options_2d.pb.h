// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cartographer/mapping/proto/probability_grid_range_data_inserter_options_2d.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_cartographer_2fmapping_2fproto_2fprobability_5fgrid_5frange_5fdata_5finserter_5foptions_5f2d_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_cartographer_2fmapping_2fproto_2fprobability_5fgrid_5frange_5fdata_5finserter_5foptions_5f2d_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_cartographer_2fmapping_2fproto_2fprobability_5fgrid_5frange_5fdata_5finserter_5foptions_5f2d_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_cartographer_2fmapping_2fproto_2fprobability_5fgrid_5frange_5fdata_5finserter_5foptions_5f2d_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_cartographer_2fmapping_2fproto_2fprobability_5fgrid_5frange_5fdata_5finserter_5foptions_5f2d_2eproto;
namespace cartographer {
namespace mapping {
namespace proto {
class ProbabilityGridRangeDataInserterOptions2D;
class ProbabilityGridRangeDataInserterOptions2DDefaultTypeInternal;
extern ProbabilityGridRangeDataInserterOptions2DDefaultTypeInternal _ProbabilityGridRangeDataInserterOptions2D_default_instance_;
}  // namespace proto
}  // namespace mapping
}  // namespace cartographer
PROTOBUF_NAMESPACE_OPEN
template<> ::cartographer::mapping::proto::ProbabilityGridRangeDataInserterOptions2D* Arena::CreateMaybeMessage<::cartographer::mapping::proto::ProbabilityGridRangeDataInserterOptions2D>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace cartographer {
namespace mapping {
namespace proto {

// ===================================================================

class ProbabilityGridRangeDataInserterOptions2D :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cartographer.mapping.proto.ProbabilityGridRangeDataInserterOptions2D) */ {
 public:
  ProbabilityGridRangeDataInserterOptions2D();
  virtual ~ProbabilityGridRangeDataInserterOptions2D();

  ProbabilityGridRangeDataInserterOptions2D(const ProbabilityGridRangeDataInserterOptions2D& from);
  ProbabilityGridRangeDataInserterOptions2D(ProbabilityGridRangeDataInserterOptions2D&& from) noexcept
    : ProbabilityGridRangeDataInserterOptions2D() {
    *this = ::std::move(from);
  }

  inline ProbabilityGridRangeDataInserterOptions2D& operator=(const ProbabilityGridRangeDataInserterOptions2D& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProbabilityGridRangeDataInserterOptions2D& operator=(ProbabilityGridRangeDataInserterOptions2D&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProbabilityGridRangeDataInserterOptions2D& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProbabilityGridRangeDataInserterOptions2D* internal_default_instance() {
    return reinterpret_cast<const ProbabilityGridRangeDataInserterOptions2D*>(
               &_ProbabilityGridRangeDataInserterOptions2D_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ProbabilityGridRangeDataInserterOptions2D& a, ProbabilityGridRangeDataInserterOptions2D& b) {
    a.Swap(&b);
  }
  inline void Swap(ProbabilityGridRangeDataInserterOptions2D* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProbabilityGridRangeDataInserterOptions2D* New() const final {
    return CreateMaybeMessage<ProbabilityGridRangeDataInserterOptions2D>(nullptr);
  }

  ProbabilityGridRangeDataInserterOptions2D* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProbabilityGridRangeDataInserterOptions2D>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProbabilityGridRangeDataInserterOptions2D& from);
  void MergeFrom(const ProbabilityGridRangeDataInserterOptions2D& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProbabilityGridRangeDataInserterOptions2D* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "cartographer.mapping.proto.ProbabilityGridRangeDataInserterOptions2D";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_cartographer_2fmapping_2fproto_2fprobability_5fgrid_5frange_5fdata_5finserter_5foptions_5f2d_2eproto);
    return ::descriptor_table_cartographer_2fmapping_2fproto_2fprobability_5fgrid_5frange_5fdata_5finserter_5foptions_5f2d_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHitProbabilityFieldNumber = 1,
    kMissProbabilityFieldNumber = 2,
    kInsertFreeSpaceFieldNumber = 3,
  };
  // double hit_probability = 1;
  void clear_hit_probability();
  double hit_probability() const;
  void set_hit_probability(double value);
  private:
  double _internal_hit_probability() const;
  void _internal_set_hit_probability(double value);
  public:

  // double miss_probability = 2;
  void clear_miss_probability();
  double miss_probability() const;
  void set_miss_probability(double value);
  private:
  double _internal_miss_probability() const;
  void _internal_set_miss_probability(double value);
  public:

  // bool insert_free_space = 3;
  void clear_insert_free_space();
  bool insert_free_space() const;
  void set_insert_free_space(bool value);
  private:
  bool _internal_insert_free_space() const;
  void _internal_set_insert_free_space(bool value);
  public:

  // @@protoc_insertion_point(class_scope:cartographer.mapping.proto.ProbabilityGridRangeDataInserterOptions2D)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  double hit_probability_;
  double miss_probability_;
  bool insert_free_space_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_cartographer_2fmapping_2fproto_2fprobability_5fgrid_5frange_5fdata_5finserter_5foptions_5f2d_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ProbabilityGridRangeDataInserterOptions2D

// double hit_probability = 1;
inline void ProbabilityGridRangeDataInserterOptions2D::clear_hit_probability() {
  hit_probability_ = 0;
}
inline double ProbabilityGridRangeDataInserterOptions2D::_internal_hit_probability() const {
  return hit_probability_;
}
inline double ProbabilityGridRangeDataInserterOptions2D::hit_probability() const {
  // @@protoc_insertion_point(field_get:cartographer.mapping.proto.ProbabilityGridRangeDataInserterOptions2D.hit_probability)
  return _internal_hit_probability();
}
inline void ProbabilityGridRangeDataInserterOptions2D::_internal_set_hit_probability(double value) {
  
  hit_probability_ = value;
}
inline void ProbabilityGridRangeDataInserterOptions2D::set_hit_probability(double value) {
  _internal_set_hit_probability(value);
  // @@protoc_insertion_point(field_set:cartographer.mapping.proto.ProbabilityGridRangeDataInserterOptions2D.hit_probability)
}

// double miss_probability = 2;
inline void ProbabilityGridRangeDataInserterOptions2D::clear_miss_probability() {
  miss_probability_ = 0;
}
inline double ProbabilityGridRangeDataInserterOptions2D::_internal_miss_probability() const {
  return miss_probability_;
}
inline double ProbabilityGridRangeDataInserterOptions2D::miss_probability() const {
  // @@protoc_insertion_point(field_get:cartographer.mapping.proto.ProbabilityGridRangeDataInserterOptions2D.miss_probability)
  return _internal_miss_probability();
}
inline void ProbabilityGridRangeDataInserterOptions2D::_internal_set_miss_probability(double value) {
  
  miss_probability_ = value;
}
inline void ProbabilityGridRangeDataInserterOptions2D::set_miss_probability(double value) {
  _internal_set_miss_probability(value);
  // @@protoc_insertion_point(field_set:cartographer.mapping.proto.ProbabilityGridRangeDataInserterOptions2D.miss_probability)
}

// bool insert_free_space = 3;
inline void ProbabilityGridRangeDataInserterOptions2D::clear_insert_free_space() {
  insert_free_space_ = false;
}
inline bool ProbabilityGridRangeDataInserterOptions2D::_internal_insert_free_space() const {
  return insert_free_space_;
}
inline bool ProbabilityGridRangeDataInserterOptions2D::insert_free_space() const {
  // @@protoc_insertion_point(field_get:cartographer.mapping.proto.ProbabilityGridRangeDataInserterOptions2D.insert_free_space)
  return _internal_insert_free_space();
}
inline void ProbabilityGridRangeDataInserterOptions2D::_internal_set_insert_free_space(bool value) {
  
  insert_free_space_ = value;
}
inline void ProbabilityGridRangeDataInserterOptions2D::set_insert_free_space(bool value) {
  _internal_set_insert_free_space(value);
  // @@protoc_insertion_point(field_set:cartographer.mapping.proto.ProbabilityGridRangeDataInserterOptions2D.insert_free_space)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace mapping
}  // namespace cartographer

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_cartographer_2fmapping_2fproto_2fprobability_5fgrid_5frange_5fdata_5finserter_5foptions_5f2d_2eproto
